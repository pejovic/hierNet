install.packages("formatR")
formatR::tidy_dir("R")
formatR::tidy_dir("R")
install.packages("lintr")
lintr::lint_package()
?on.exit
getwd()
setwd("I:/_Bor/drugi rad")
library(rgdal)
library(GSIF)
library(gdalUtils)
library(raster)
library(RSAGA)
library(randomForest)
library(quantregForest)
library(plotKML)
library(plyr)
library(aqp)
library(psych)
library(mda)
library(classInt)
library(caret)
library(randomForest)
library(forestFloor)
library(ICEbox)
library(plotmo)
library(corrplot)
library(MASS)
library(splines)
library(glmnet)
library(glinternet)
library(hierNet)
gk_7 <- "+proj=tmerc +lat_0=0 +lon_0=21 +k=0.9999 +x_0=7500000 +y_0=0 +ellps=bessel +towgs84=574.027,170.175,401.545,4.88786,-0.66524,-13.24673,0.99999311067 +units=m"
utm <- "+proj=utm +zone=34 +ellps=GRS80 +towgs84=0.26901,0.18246,0.06872,-0.01017,0.00893,-0.01172,0.99999996031 +units=m"
load("gridmaps.RDa")
## Soil profiles:
bor <- join(read.csv("Profili_sredjeno_csv.csv"), read.csv("Koordinate_csv.csv"), type="inner")
bor$altitude <- -(bor$Top/100+((bor$Bottom - bor$Top)/2)/100)
## correlation between As and soil properties:
bor<-bor[,-c(7:12,14,15,16,17)]
names(bor)<-c("Soil.Type","ID","Horizont","Top" , "Bottom","pH","Humus","As","Co","x","y","altitude")
#svars <- c("pH","Humus","As","Co")
#c.bor <- bor[complete.cases(bor[,svars]),]
## 406
#m.Cor <- quantregForest(x=c.bor[,svars[-which(svars=="Humus")]], y=c.bor$Humus,importance=TRUE)
#varImpPlot(m.Cor)
## TH: "Humus" and "Y1" are the most important!
bor.xy <- bor[complete.cases(bor[,c("ID","x","y","altitude","pH","Humus","As","Co")]),c("ID","x","y","altitude","pH","Humus","As","Co")] #"ID","x","y","altitude","pH","Humus","As","Co"
bor.xy <- plyr::rename(bor.xy, replace=c("x" = "longitude", "y" = "latitude"))
coordinates(bor.xy) <- ~ longitude + latitude
proj4string(bor.xy) <- CRS(utm)
bor.xy <- spTransform(bor.xy, CRS(gk_7))
bor.Humus.xy <- bor[complete.cases(bor[,c("ID","x","y","altitude","Humus")]),c("ID","x","y","altitude","Humus")]
bor.Humus.xy <- plyr::rename(bor.Humus.xy, replace=c("x" = "longitude", "y" = "latitude"))
coordinates(bor.Humus.xy) <- ~ longitude + latitude
proj4string(bor.Humus.xy) <- CRS(utm)
bor.Humus.xy <- spTransform(bor.Humus.xy, CRS(gk_7))
sm2D.lst<-names(gridmaps.sm2D)[-length(names(gridmaps.sm2D))]
##################################################################3
ov.H <- over(bor.Humus.xy, gridmaps.sm2D)
bor.Humus.xy@data[,c(sm2D.lst,"SoilType")] <- ov.H
str(bor.Humus.xy)
bor.Humus.df<-data.frame(bor.Humus.xy)
bor.Humus.df <- bor.Humus.df[complete.cases(bor.Humus.df[,names(bor.Humus.df)]),]
str(bor.Humus.df)
names(bor.Humus.df)
bor.Humus.df<-bor.Humus.df[,-which(names(bor.Humus.df) %in% c("AnalyticalHills","LSFactor","ChannelNetBaseLevel","RelSlopePosition","CatchArea","WindEffectNorthWest","VelleyDepth","optional"))]
str(bor.Humus.df)
#bor.Humus.df<-bor.Humus.df[-which(bor.Humus.df$ID %in% c(141)),] #153,137,141,145,150
summary(bor.Humus.df)
#bor.As.df$As
H.df<-ddply(bor.Humus.df,.(altitude))
H.df <- H.df[order(-H.df$altitude),]
head(H.df)
names(H.df)
sm2D.lst<-names(H.df)[c(4:16)]
preProcValues <- preProcess(H.df[,c("altitude",sm2D.lst[1:11])], method = c("center", "scale"))
HTrans.df<-cbind(predict(preProcValues, H.df[,c("altitude",sm2D.lst[1:11])]),H.df[,c(2,3)],H.df[,sm2D.lst[12:13]])
fm.H <- as.formula(paste("Humus ~", paste(c(sm2D.lst,"altitude"), collapse="+")))
x1 <- model.matrix(fm.H ,HTrans.df)[,-1] #fm.int.lm.As, # fm.GSIF.int.lm.As
nzv <- nearZeroVar(x1)
names(data.frame(x1)[,nzv])
if(sum(nzv)!=0){x1 <- x1[, -nzv]}else{x1<-x1}
hnet<-hierNet(x=HTrans.df[,c(1:19)],y=H,lam=0.3,zz=HTrans.df[,20:34])
compute.interactions.c(HTrans.df[,c(1:19)],diagonal = FALSE)
HTrans.df<-x1
compute.interactions.c(HTrans.df[,c(1:19)],diagonal = FALSE)
nn<-names(data.frame(compute.interactions.c(HTrans.df[,c(1:19)],diagonal = FALSE)))
which(nn %in% grep("altitude", nn, value = TRUE))
rm(list=ls())
install()
library(devtools)
install()
install.packages()
env	<-	new.env(parent	=	emptyenv())
source("funcs.R",	local	=	env)
source("funcs.r",	local	=	env)
source("funcs.R",	local	=	env)
getwd()
setwd("D:/_R projects/hierNet")
#	Load	a	script	into	a	new	environment	and	save	it
env	<-	new.env(parent	=	emptyenv())
source("funcs.R",	local	=	env)
source(paste(getwd(),"R","funcs.R",sep="/"),	local	=	env)
setwd("D:/_R projects/hierNet")
source(paste(getwd(),"R","funcs.R",sep="/"),local	=	env)
paste(getwd(),"R","funcs.R",sep="/")
source(paste(getwd(),"R","funcs.R",sep="/"),local	=	env)
source(paste(getwd(),"R","stratFold3D.R",sep="/"),local	=	env)
setwd("D:/_R projects/hierNet/R")
source("stratFold3D.R",local	=	env)
source("stratFold3D.R",local	=	env)
source("funcs.R",local	=	env)
source("funcs.R")#,local	=	env)
rm(list=ls())
env	<-	new.env(parent	=	emptyenv())
source("funcs.R",local	=	env)
getwd()
source(paste(getwd(),"R","funcs.R",sep="/"),local	=	env)
source(paste(getwd(),"R","funcs.R",sep="/"))#,local	=	env)
source(paste(getwd(),"R","funcs.R",sep="/"),local	=	env)
rm(list=ls())
getwd()
env	<-	new.env(parent	=	emptyenv())
library(rgdal)
library(GSIF)
library(gdalUtils)
library(raster)
library(plyr)
library(aqp)
library(psych)
library(mda)
library(classInt)
library(caret)
library(corrplot)
library(MASS)
library(splines)
library(glmnet)
library(glinternet)
library(hierNet)
load(paste(getwd(),"inst","extdata","gridmaps.RDa",sep="/"))
bor <- join(read.csv(paste(getwd(),"inst","extdata","Profili_sredjeno_csv.csv",sep="/")), read.csv(paste(getwd(),"inst","extdata","Koordinate_csv.csv",sep="/")), type="inner")
bor$altitude <- -(bor$Top/100+((bor$Bottom - bor$Top)/2)/100)
bor<-bor[,-c(7:12,14,15,16,17)]
names(bor)<-c("Soil.Type","ID","Horizont","Top" , "Bottom","pH","Humus","As","Co","x","y","altitude")
bor.Humus.xy <- bor[complete.cases(bor[,c("ID","x","y","altitude","Humus")]),c("ID","x","y","altitude","Humus")]
bor.Humus.xy <- plyr::rename(bor.Humus.xy, replace=c("x" = "longitude", "y" = "latitude"))
coordinates(bor.Humus.xy) <- ~ longitude + latitude
proj4string(bor.Humus.xy) <- CRS(utm)
proj4string(bor.Humus.xy) <- CRS(utm)
gk_7 <- "+proj=tmerc +lat_0=0 +lon_0=21 +k=0.9999 +x_0=7500000 +y_0=0 +ellps=bessel +towgs84=574.027,170.175,401.545,4.88786,-0.66524,-13.24673,0.99999311067 +units=m"
utm <- "+proj=utm +zone=34 +ellps=GRS80 +towgs84=0.26901,0.18246,0.06872,-0.01017,0.00893,-0.01172,0.99999996031 +units=m"
proj4string(bor.Humus.xy) <- CRS(utm)
bor.Humus.xy <- spTransform(bor.Humus.xy, CRS(gk_7))
gridmaps.sm2D
names(gridmaps.sm2D)
sm2D.lst<-names(gridmaps.sm2D)
ov.H <- over(bor.Humus.xy, gridmaps.sm2D)
bor.Humus.xy@data[,c(sm2D.lst)] <- ov.H
str(bor.Humus.xy)
bor.Humus.df<-data.frame(bor.Humus.xy)
bor.Humus.df <- bor.Humus.df[complete.cases(bor.Humus.df[,names(bor.Humus.df)]),]
str(bor.Humus.df)
names(bor.Humus.df)
bor.Humus.df<-bor.Humus.df[,-which(names(bor.Humus.df) %in% c("AnalyticalHills","LSFactor","ChannelNetBaseLevel","RelSlopePosition","CatchArea","WindEffectNorthWest","VelleyDepth","optional"))]
source(paste(getwd(),"R","stratFold.R",sep="/"))
source(paste(getwd(),"R","stratFold3D.R",sep="/"))
source(paste(getwd(),"R","penint3D.R",sep="/"))
fun<-fm.H
contVar<-sm2D.lst[1:11]
regdat<-H.df
fm.H <- as.formula(paste("Humus ~", paste(c(sm2D.lst,"altitude"), collapse="+")))
fun<-fm.H
regdat<-H.df
H.df<-ddply(bor.Humus.df,.(altitude))
H.df <- H.df[order(-H.df$altitude),]
head(H.df)
names(H.df)
regdat<-H.df
contVar<-sm2D.lst[1:11]
contVar
targetVar<-"Humus"
strat<-stratFold3D(targetVar="Humus",regdat=H.df,folds=6,cent=3,dimensions="2D",IDs=TRUE,sum=TRUE,plot=TRUE)
strat<-stratfold3d(targetVar="Humus",regdat=H.df,folds=6,cent=3,dimensions="2D",IDs=TRUE,sum=TRUE,plot=TRUE)
flist<-strat$folds
penint3D(fun=fm.H,regdat=H.df,lambda=10^seq(10,-2,length=100),contVar=sm2D.lst[1:11],int=TRUE,flist=flist)
penint3D(fun=fm.H,regdat=H.df,lambda=10^seq(10,-2,length=100),contVar=contVar,int=TRUE,flist=flist)
contVar
names(bor.Humus.df)
names(H.df)
sm2D.lst
sm2D.lst<-names(H.df)[c(4:16)]
sm2D.lst
sm2D.lst
contVar<-sm2D.lst[1:11]
penint3D(fun=fm.H,regdat=H.df,lambda=10^seq(10,-2,length=100),contVar=contVar,int=TRUE,flist=flist)
contVar
fm.H
fm.H <- as.formula(paste("Humus ~", paste(c(sm2D.lst,"altitude"), collapse="+")))
fun<-fm.H
regdat<-H.df
contVar<-sm2D.lst[1:11]
targetVar<-"Humus"
strat<-stratfold3d(targetVar="Humus",regdat=H.df,folds=6,cent=3,dimensions="2D",IDs=TRUE,sum=TRUE,plot=TRUE)
flist<-strat$folds
penint3D(fun=fm.H,regdat=H.df,lambda=10^seq(10,-2,length=100),contVar=contVar,int=TRUE,flist=flist)
library(rgdal)
library(GSIF)
library(gdalUtils)
library(raster)
library(plyr)
library(aqp)
library(psych)
library(mda)
library(classInt)
library(caret)
library(corrplot)
library(MASS)
library(splines)
library(glmnet)
library(glinternet)
library(hierNet)
gk_7 <- "+proj=tmerc +lat_0=0 +lon_0=21 +k=0.9999 +x_0=7500000 +y_0=0 +ellps=bessel +towgs84=574.027,170.175,401.545,4.88786,-0.66524,-13.24673,0.99999311067 +units=m"
utm <- "+proj=utm +zone=34 +ellps=GRS80 +towgs84=0.26901,0.18246,0.06872,-0.01017,0.00893,-0.01172,0.99999996031 +units=m"
load(paste(getwd(),"inst","extdata","gridmaps.RDa",sep="/"))
bor <- join(read.csv(paste(getwd(),"inst","extdata","Profili_sredjeno_csv.csv",sep="/")), read.csv(paste(getwd(),"inst","extdata","Koordinate_csv.csv",sep="/")), type="inner")
bor$altitude <- - (bor$Top / 100 + (( bor$Bottom - bor$Top ) / 2) / 100)
bor <- bor[, - c( 7:12,14,15,16,17 )]
names(bor) <- c("Soil.Type","ID","Horizont","Top" , "Bottom","pH","Humus","As","Co","x","y","altitude")
bor.Humus.xy <- bor[complete.cases(bor[,c("ID","x","y","altitude","Humus")]),c("ID","x","y","altitude","Humus")]
bor.Humus.xy <- plyr::rename(bor.Humus.xy, replace=c("x" = "longitude", "y" = "latitude"))
coordinates(bor.Humus.xy) <- ~ longitude + latitude
proj4string(bor.Humus.xy) <- CRS(utm)
bor.Humus.xy <- spTransform(bor.Humus.xy, CRS(gk_7))
sm2D.lst<-names(gridmaps.sm2D)
ov.H <- over(bor.Humus.xy, gridmaps.sm2D)
bor.Humus.xy@data[,c(sm2D.lst)] <- ov.H
str(bor.Humus.xy)
bor.Humus.df <- data.frame(bor.Humus.xy)
bor.Humus.df <- bor.Humus.df[complete.cases(bor.Humus.df[,names(bor.Humus.df)]),]
str(bor.Humus.df)
#============== Removing correlated covariates (previously determined) ==============
names(bor.Humus.df)
bor.Humus.df<-bor.Humus.df[,-which(names(bor.Humus.df) %in% c("AnalyticalHills","LSFactor","ChannelNetBaseLevel","RelSlopePosition","CatchArea","WindEffectNorthWest","VelleyDepth","optional"))]
str(bor.Humus.df)
#bor.Humus.df<-bor.Humus.df[-which(bor.Humus.df$ID %in% c(141)),] #153,137,141,145,150
#============== Sorting by altitude =================================================
H.df<-ddply(bor.Humus.df,.(altitude))
H.df <- H.df[order(-H.df$altitude),]
head(H.df)
names(H.df)
sm2D.lst<-names(H.df)[c(4:16)]
source(paste(getwd(),"R","funcs.R",sep="/"))
?apply
?scale
apply(H.df[,c("altitude",sm2D.lst[1:11])],2,scale)
H.df[,c("altitude",sm2D.lst[1:11])]<-apply(H.df[,c("altitude",sm2D.lst[1:11])],2,scale)
mm <- model.matrix(fm.H ,HTrans.df)[,-1] #fm.int.lm.As, # fm.GSIF.int.lm.As
fm.H <- as.formula(paste("Humus ~", paste(c(sm2D.lst,"altitude"), collapse="+")))
mm <- model.matrix(fm.H ,H.df)[,-1] #fm.int.lm.As, # fm.GSIF.int.lm.As
nzv <- nearZeroVar(mm)
names(data.frame(mm)[, nzv])
if(sum(nzv) != 0){mm <- mm[, -nzv]}else{mm <- mm}
H <- H.df$Humus
hnet<-hierNet(x=mm[,c(1:19)],y=H,lam=0.3)#,zz=mm[,20:34])
hnet
compute.interactions.c(HTrans.df[,c(1:19)],diagonal = FALSE)
compute.interactions.c(mm[,c(1:19)],diagonal = FALSE)
nn<-names(data.frame(compute.interactions.c(HTrans.df[,c(1:19)],diagonal = FALSE)))
nn<-names(data.frame(compute.interactions.c(mm[,c(1:19)],diagonal = FALSE)))
intind<-which(nn %in% grep("altitude", nn, value = TRUE))
compute.interactions.c(mm[,c(1:19)],diagonal = FALSE)[,intind]
head(compute.interactions.c(mm[,c(1:19)],diagonal = FALSE)[,intind])
