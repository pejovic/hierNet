{
    "collab_server" : "",
    "contents" : "# Create stratified folds\n\nstratfold3d <- function(targetVar,regdat,folds=6,cent=3,preProc=TRUE,seed=666,dimensions=list(\"2D\",\"3D\"),IDs=TRUE,sum=FALSE,plot=FALSE){\n  \n  dimensions<-dimensions[[1]]\n  if(dimensions==\"2D\"){\n    \n    unique.df<-ddply(regdat,.(ID),here(summarize),target=mean(eval(parse(text=targetVar))),longitude=longitude[1],latitude=latitude[1])\n    km <- kmeans(cbind(unique.df$longitude,unique.df$latitude), centers = cent)\n    #plot(unique.df$longitude,unique.df$latitude, col = km$cluster, pch = 20)\n    unique.df$km<-as.factor(km$cluster)} else {\n      \n      unique.df<-ddply(regdat,.(ID),here(summarize),target=mean(eval(parse(text=targetVar))),longitude=longitude[1],latitude=latitude[1],altitude=min(altitude))\n      km <- kmeans(cbind(scale(unique.df$longitude),scale(unique.df$latitude),scale(unique.df$altitude)), centers = cent)\n      #plot(unique.df$longitude,unique.df$latitude, col = km$cluster, pch = 20)\n      unique.df$km<-as.factor(km$cluster)\n    }\n  \n  \n  k.list<-as.list(rep(NA,length(unique(unique.df$km))))\n  names(k.list)<-paste(\"k\",c(1:length(k.list)),sep=\"\")\n  \n  \n  ########## Creating list of profile indices of 6 folds per cluster region ###############\n  for(i in 1:length(k.list)){\n    set.seed(seed)\n    k.list[[i]]<-createFolds(unique.df[which(unique.df$km==levels(unique.df$km)[i]),\"target\"],k=folds)\n    for(j in 1:folds){\n      k.list[[i]][[j]]<-unique.df[which(unique.df$km==levels(unique.df$km)[i]),\"ID\"][k.list[[i]][[j]]]\n    }\n  }\n  ##########################################################################################\n  \n  ################### Creating list of profile indices per fold ############################\n  ID.list<-as.list(rep(NA,folds))\n  names(ID.list)<-paste(\"fold\",c(1:folds),sep = \"\")\n  for(i in 1:folds){\n    ID.list[[i]]<-do.call(c,lapply(k.list,function(x) x[[i]]))\n    names(ID.list[[i]])<-NULL\n    #folds.list[[i]]<-as.character(folds.list[[i]])\n  }\n  \n  ###########################################################################################\n  \n  ##############  Creating list of \n  folds.list<-as.list(rep(NA,folds))\n  names(folds.list)<-paste(\"fold\",c(1:folds),sep = \"\")\n  for(i in 1:length(ID.list)){\n    folds.list[[i]]<-which(regdat$ID %in% ID.list[[i]])\n  }\n  \n  \n  pom<-data.frame()\n  for(i in 1:length(folds.list)){\n    allData1<-regdat[folds.list[[i]],]\n    allData1$fold<-paste(\"fold\",i,sep=\"\")\n    allData<-rbind(allData1,pom)\n    pom<-allData\n  }\n  allData$fold<-factor(allData$fold)\n  sum.list=list(by(allData$altitude,allData$fold,summary))\n  if(IDs==TRUE){index.list=(ID.list)}else{index.list=(folds.list)}\n  sum.list<-list(allData,index.list,sum.list,by(allData[,paste(targetVar)],allData$fold,summary))\n  names(sum.list)<-c(\"Data\",\"folds\",\"altitude summary\",paste(targetVar,\"summary\", sep=\" \"))\n  \n  if(plot==TRUE){\n    \n    allData.unique<-ddply(allData,.(ID),here(summarize),target=mean(eval(parse(text=targetVar))),longitude=longitude[1],latitude=latitude[1],fold=fold[1])\n    q <- ggplot(allData.unique,aes(x = longitude, y = latitude))\n    r <- q +geom_point(aes(size = sqrt(target/pi)), pch = 21, show.legend = FALSE) + scale_size_continuous(range=c(1,10))\n    r <- r + facet_wrap(~ fold)\n    r<-r + aes(fill = fold)\n    plot(r)\n  }\n  \n  if(sum==TRUE){return(sum.list)}else{return(sum.list[[1]])}\n}\n\n\n",
    "created" : 1457277923194.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2330079327",
    "id" : "AD35DE6A",
    "lastKnownWriteTime" : 1457280092,
    "last_content_update" : 1457280092500,
    "path" : "D:/_R projects/hierNet/R/stratFold3D.R",
    "project_path" : "R/stratFold3D.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}